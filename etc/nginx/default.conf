server {
  listen 80 default_server;
  listen [::]:80 default_server;
  server_name localhost;

  # AWS Load Balancer health checker location
  location /lb-status {
    access_log off;
    return 200 'A-OK!';
    # because default content-type is application/octet-stream,
    # browser will offer to "save the file"...
    # the next line allows you to see it in the browser so you can test 
    add_header Content-Type text/plain;
  }
  # End of AWS ELB health checker

  # HTTP to HTTPS redirection if aws load balancer is set up
  set $is_https 0;

  # Check if it's already https then set is_http so it will skip redirecting to https
  proxy_set_header X-Forwarded-Proto $scheme;
  if ( $http_x_forwarded_proto = 'https' ) {
    set $is_https 1;
  }

  # Check if $host != '*.tasyakur.id' (Only all *.tasyakur.id subdomains need to be https redirected)
  if ( $host !~* ^(.+\.)?tasyakur\.id$ ) {
    set $is_https 1;
  }

  if ( $is_https = 0 ) {
    return 301 https://$host$request_uri;
  }
  # End of HTTPS redirection

  # Begin server body
  client_max_body_size 40M;

  error_log /var/log/nginx/error.log;
  access_log /var/log/nginx/access.log;

  root /var/www/html/public;
  index index.html index.htm index.php;

  # Access to main domain will get redirected to index.php
  location / {
    try_files $uri
              $uri/
              /index.php?$args;
  }

  # Prevent / Deny Access Block
  # Hidden files
  location ~ /\. {
    access_log off;
    log_not_found off;
    deny all;
  }

  # Access to all .php files will be served by php-fpm
  location ~ \.php$ {
    try_files $uri =404;
    fastcgi_split_path_info ^(.+\.php)(/.+)$;
    fastcgi_pass php:9000;
    fastcgi_index index.php;
    fastcgi_read_timeout 300;
    fastcgi_keep_conn on;
    include fastcgi_params;
    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    fastcgi_param PATH_INFO $fastcgi_path_info;
  }
  #End of server body
}